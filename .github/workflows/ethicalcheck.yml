name: EthicalCheck-Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '38 13 * * 2'
  workflow_dispatch:

permissions:
  contents: read

jobs:git
  Trigger_EthicalCheck:
    permissions:
      security-events: write
      actions: read
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Step 3: Install dependencies (Flask app setup)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Assignment-4/requirements.txt

      # Step 4: Run Flask app (ensure it's running before EthicalCheck can access it)
      - name: Run Flask application
        run: |
          nohup python Assignment-4/main.py &

      # Step 5: EthicalCheck Free & Automated API Security Testing Service
      - name: EthicalCheck API Security Testing
        uses: apisec-inc/ethicalcheck-action@005fac321dd843682b1af6b72f30caaf9952c641
        with:
          # Replace with the actual OpenAPI Specification URL or Swagger path.
          oas-url: "http://localhost:8080/v2/api-docs" # Update with the correct URL
          email: "altair200294@gmail.com" # Enter your email for the report
          sarif-result-file: "ethicalcheck-results.sarif"

      # Step 6: Upload the SARIF result to GitHub (for code quality or security insights)
      - name: Upload SARIF results to repository
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./ethicalcheck-results.sarif